---
kind: pipeline
type: exec
name: build-fake-world-web

login_docker: &login_docker echo Start login docker && echo $DOCKER_PASSWORD |  docker login --username $DOCKER_USERNAME --password-stdin git.devdoll.icu && echo login successful

docker_auth_environment: &docker_auth_environment
  DOCKER_USERNAME:
    from_secret: DOCKER_USERNAME
  DOCKER_PASSWORD:
    from_secret: DOCKER_PASSWORD


clone:
  depth: 1

steps:
- name: build-web-image-prod
  environment:
    <<: *docker_auth_environment
  commands:
    - *login_docker
    - echo Start build image
    - docker build -f Dockerfile.web -t git.devdoll.icu/liangniang/fake-world-web-production .
    - echo End build image
    - echo Start push image
    - docker push git.devdoll.icu/liangniang/fake-world-web-production
    - echo image push successful
  when:
    branch:
      - release/web

- name: build-api-image-prod
  environment:
    <<: *docker_auth_environment
  commands:
    - *login_docker
    - echo Start build image
    - docker build -f Dockerfile.api -t git.devdoll.icu/liangniang/fake-world-api-production .
    - echo End build image
    - docker push git.devdoll.icu/liangniang/fake-world-api-production
    - echo image push successful
  when:
    branch:
      - release/api

- name: build-web-image-staging
  environment:
    <<: *docker_auth_environment
  commands:
    - *login_docker
    - echo Start build image
    - docker build -f Dockerfile.web -t git.devdoll.icu/liangniang/fake-world-web-staging .
    - echo End build image
    - docker push git.devdoll.icu/liangniang/fake-world-web-staging
    - echo image push successful
  when:
    branch:
      - staging/web

# - name: build-api-image-staging
#   environment:
#     <<: *docker_auth_environment
#   commands:
#     - *login_docker
#     - echo Start build image
#     - docker build -f Dockerfile.api -t git.devdoll.icu/liangniang/fake-world-api-staging .
#     - echo End build image
#     - docker push git.devdoll.icu/liangniang/fake-world-api-staging
#     - echo image push successful
#   when:
#     branch:
#       - staging/api

trigger:
  event:
    - push
    - pull_request
  branch:
    - release/*
    - staging/*

---
kind: pipeline
type: exec
name: deploy-fake-world-web

into_services: &into_services cd /home/liang/services/projects/fake-world

target_production: &target_production
  target:
    - production

target_staging: &target_staging
  target:
    - staging


clone:
  disable: true

steps:
- name: deploy-web-to-prod
  commands:
    - *into_services
    - docker-compose up -d fake-world-web-production
  when:
    <<: *target_production
    branch:
      - release/web

- name: deploy-web-to-staging
  commands:
    - *into_services
    - docker-compose up -d fake-world-web-staging
  when:
    <<: *target_staging
    branch:
      - staging/web

- name: deploy-api-to-prod
  commands:
    - *into_services
    - docker-compose up -d fake-world-api-production
  when:
    <<: *target_production
    branch:
      - release/api

# - name: deploy-api-to-staging
#   commands:
#     - *into_services
#     - docker-compose up -d fake-world-api-staging
#   when:
#     <<: *target_staging
#     branch:
#       - staging/api

trigger:
  event:
    - promote